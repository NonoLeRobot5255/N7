services:
  routeur_central_entreprise_secondaire:
    build:
      context: .
    container_name: routeur_central_entreprise_secondaire
    networks:
      net_central_entreprise_secondaire:
        ipv4_address: 192.0.190.100
      net_routeur_acces_entreprises_2:
        ipv4_address: 120.0.23.7
    sysctls:
      net.ipv4.ip_forward: 1
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
      - NET_RAW
    volumes:
      - ./routage/routeur_central_entreprise_secondaire/ospfd.conf:/etc/quagga/ospfd.conf
      - ./routage/routeur_central_entreprise_secondaire/zebra.conf:/etc/quagga/zebra.conf
      - ./routage/vtysh.conf:/etc/quagga/vtysh.conf
    tty: true
    privileged: true

  entreprise_secondaire_machine_direction:
    image: alpine:latest
    container_name: entreprise_secondaire_machine_direction
    tty: true
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
      - NET_RAW
    networks:
      net_central_entreprise_secondaire:
        ipv4_address: 192.0.190.2
    command: /bin/sh -c "ip route del default && ip route add default via 192.0.190.100 && tail -f /dev/null"
    dns:
      - 120.0.30.11
    

  routeur_reseau_prive_secondaire:
    container_name: routeur_reseau_prive_secondaire
    image: pihole/pihole:latest
    hostname: routeur_reseau_prive_secondaire
    cap_add:
      - NET_ADMIN # Ajout de la capacité d'administrer le réseau (nécessaire pour Pi-hole et la fonction DHCP)
    networks:
      net_central_entreprise_secondaire:
        ipv4_address: 192.0.190.101
      net_salle_machine_secondaire:
        ipv4_address: 192.0.191.100
    command: /bin/sh -c "ip route del default && ip route add default via 192.0.190.100 && tail -f /dev/null"
    ports:
      - 67/udp    # Service DHCP (si activé)
    environment:
      ServerIP: 192.0.191.100  # Adresse IP du serveur (doit correspondre à `ipv4_address` du reseau dhcp)
    restart: unless-stopped  # Redémarre automatiquement sauf si arrêté manuellement

  entreprise_secondaire_machine_1:
    image: alpine:latest
    container_name: entreprise_secondaire_machine_1
    tty: true
    networks:
      net_salle_machine_secondaire: {}  # DHCP attribuera l'adresse IP
    command: sleep infinity 

  entreprise_secondaire_machine_2:
    image: alpine:latest
    container_name: entreprise_secondaire_machine_2
    tty: true
    networks:
      net_salle_machine_secondaire: {}  # DHCP attribuera l'adresse IP
    command: sleep infinity 

  entreprise_secondaire_machine_3:
    image: alpine:latest
    container_name: entreprise_secondaire_machine_3
    tty: true
    networks:
      net_salle_machine_secondaire: {}  # DHCP attribuera l'adresse IP
    command: sleep infinity 

networks:
  net_central_entreprise_secondaire:
    driver: bridge
    ipam:
      config:
        - subnet: 192.0.190.0/24
  net_salle_machine_secondaire:
    driver: bridge
    ipam:
      config:
        - subnet: 192.0.191.0/24